version: 0.2
phases:
  install:
    runtime-versions:
      nodejs: 14
    commands:
      # - echo "Docker Buildx Install..."
      # - BUILDX_BINARY_URL=$(curl -sLo - https://api.github.com/repos/docker/buildx/releases/latest | jq '.assets[] | select(.browser_download_url | contains("linux-amd64")).browser_download_url' -r)
      # - mkdir -p ~/.docker/cli-plugins
      # - curl -sL $BUILDX_BINARY_URL -o ~/.docker/cli-plugins/docker-buildx
      # - chmod +x ~/.docker/cli-plugins/docker-buildx
      # - docker run --privileged --rm tonistiigi/binfmt --install all
  pre_build:
    commands:
      - echo "pre_build"
      - aws --version
      - echo "Login to AWS ECR docker registry"
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $REGISTRY
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      # - docker buildx create --use --name multiarch
      # - docker buildx build --push --platform=linux/amd64,linux/arm64 -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$REGISTRY_NAME:$IMAGE_TAG ./
      - docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$REGISTRY_NAME:$IMAGE_TAG ./
  post_build:
    commands:
      # - echo Build completed on `date`
      # - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$REGISTRY_NAME:$IMAGE_TAG
      - echo "updated line for codebuild ci"
artifacts:
  files: 
    - '**/*'  # 빌드된 모든 파일을 포함
  base-directory: '/deploy-martins'  # 아티팩트를 찾을 기본 디렉토리
  discard-paths: no  # 디렉토리 경로를 그대로 유지
  name: test  # 아티팩트의 이름
  # secondary-artifacts:  # 추가 아티팩트 정의 (선택 사항)
  #   additional-artifact:
  #     files:
  #       - 'path/to/additional/*'
  #     base-directory: '/additional'
  #     discard-paths: yes
  #     name: additional-artifac