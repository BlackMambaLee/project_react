version: 0.2
phases:
  install:
    runtime-versions:
      nodejs: 14
    commands:
      - echo "Docker Buildx Install..."
      - BUILDX_BINARY_URL=$(curl -sLo - https://api.github.com/repos/docker/buildx/releases/latest | jq '.assets[] | select(.browser_download_url | contains("linux-amd64")).browser_download_url' -r)
      - mkdir -p ~/.docker/cli-plugins
      - curl -sL $BUILDX_BINARY_URL -o ~/.docker/cli-plugins/docker-buildx
      - chmod +x ~/.docker/cli-plugins/docker-buildx
      - docker run --privileged --rm tonistiigi/binfmt --install all
  pre_build:
    commands:
      - echo "pre_build"
      - aws --version
      - echo "Login to AWS ECR docker registry"
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $REGISTRY
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker buildx create --use --name multiarch
      - docker buildx build --push --platform=linux/amd64,linux/arm64 -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$REGISTRY_NAME:$IMAGE_TAG ./
      # - docker tag ${REGISTRY_NAME}:${IMAGE_TAG} ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${REGISTRY_NAME}:${IMAGE_TAG}
  post_build:
    commands:
      - echo "Build End"

artifacts:
  files: 
    - 'deploy/after_install.sh'
    - 'deploy/appspec.yml'
  name: deploy